{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/directives/ng-else.directive.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","routes","path","redirectTo","pathMatch","loadChildren","m","LoginModule","PagesModule","AppRouting","forRoot","NgElseDirective","templateRef","viewContainer","sentence","clear","createEmbeddedView","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaC,Y;;;;;;;qCAGH,CAEP;;;;;;;yBALUA,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzB;;;;;;;;;wEDOaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTC,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAoCaC,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,E;AAAE,kBAVJ,CACP,uEADO,EAEP,4FAFO,EAGP,0DAHO,EAIL,uDAJK,EAKL,oEALK,EAML,yFANK,EAOL,wEAPK,EAQP,oEARO,CAUI;;;;4HAGFA,S,EAAS;AAAA,yBAlBlB,2DAkBkB,EAjBlB,6EAiBkB;AAjBH,oBAKf,uEALe,EAMf,4FANe,EAOf,0DAPe,EAQb,uDARa,EASb,oEATa,EAUb,yFAVa,EAWb,wEAXa,EAYf,oEAZe;AAiBG,S;AALL,O;;;;;wEAKJA,S,EAAS;gBApBrB,sDAoBqB;iBApBZ;AACRC,wBAAY,EAAE,CACZ,2DADY,EAEZ,6EAFY,CADN;AAORC,mBAAO,EAAE,CACP,uEADO,EAEP,4FAFO,EAGP,0DAHO,EAIL,uDAJK,EAKL,oEALK,EAML,yFANK,EAOL,wEAPK,EAQP,oEARO,CAPD;AAiBRC,qBAAS,EAAE,EAjBH;AAkBRC,qBAAS,EAAE,CAAC,2DAAD;AAlBH,W;AAoBY,U;;;;;;;;;;;;;;;;;;ACpCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,wE,CAIA;;;AACA,UAAMC,MAAM,GAAW,CACrB;AAACC,YAAI,EAAE,EAAP;AAAWC,kBAAU,EAAE,OAAvB;AAAgCC,iBAAS,EAAE;AAA3C,OADqB,EAErB;AAACF,YAAI,EAAE,OAAP;AAAgBG,oBAAY,EAAE;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,8CAAgCrB,IAAhC,CAAqC,UAAAsB,CAAC;AAAA,mBAAIA,CAAC,CAACC,WAAN;AAAA,WAAtC,CAAN;AAAA;AAA9B,OAFqB,EAGrB;AAACL,YAAI,EAAE,OAAP;AAAgBG,oBAAY,EAAE;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,8CAAgCrB,IAAhC,CAAqC,UAAAsB,CAAC;AAAA,mBAAIA,CAAC,CAACE,WAAN;AAAA,WAAtC,CAAN;AAAA;AAA9B,OAHqB,CAAvB;AASA;;;;;;;;;;UAaaC,U;;;;;cAAAA;;;;2BAAAA,U;AAAU,S;AAAA,kBAHZ,CAAC,6DAAaC,OAAb,CAAqBT,MAArB,CAAD,CAGY,EAFX,4DAEW;;;;4HAAVQ,U,EAAU;AAAA;AAAA,oBAFX,4DAEW;AAAA,S;AAFC,O;;;;;wEAEXA,U,EAAU;gBAJtB,sDAIsB;iBAJb;AACRX,mBAAO,EAAE,CAAC,6DAAaY,OAAb,CAAqBT,MAArB,CAAD,CADD;AAERX,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIa,U;;;;;;;;;;;;;;;;;;AC3BvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaqB,e;AAIX,iCAAoBC,WAApB,EACoBC,aADpB,EACqD;AAAA;;AADjC,eAAAD,WAAA,GAAAA,WAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AAEnB,S,CAED;;;;;qCACW;AACT,gBAAI,KAAKC,QAAT,EAAkB;AAChB,mBAAKD,aAAL,CAAmBE,KAAnB;AACD,aAFD,MAEK;AACH,mBAAKF,aAAL,CAAmBG,kBAAnB,CAAsC,KAAKJ,WAA3C;AACD;AACF;;;;;;;yBAhBUD,e,EAAe,0H,EAAA,+H;AAAA,O;;;cAAfA,e;AAAe,uC;AAAA;AAAA;AAAA;;;;;wEAAfA,e,EAAe;gBAJ3B,uDAI2B;iBAJjB;AACT;AACAlB,oBAAQ,EAAE;AAFD,W;AAIiB,U;;;;;;;AAEjBqB,kBAAQ,EAAE,CAAF;kBAAhB;AAAgB,WAAE;;;;;;;;;;;;;;;;;;;ACRrB;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMG,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,OADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {from, fromEvent} from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n\n\n  ngOnInit(): void {\n\n  }\n}\n","\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport {FormsModule} from '@angular/forms';\nimport {AppRouting} from './app.routing';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatSliderModule} from '@angular/material/slider';\n\nimport {MatIconModule} from '@angular/material/icon';\nimport { NgElseDirective } from './directives/ng-else.directive';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NgElseDirective\n\n\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n      AppRouting,\n      NgbModule,\n      NoopAnimationsModule,\n      MatSliderModule,\n    MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n// Routing por componente:\nconst routes: Routes = [\n  {path: '', redirectTo: 'login', pathMatch: 'full'},\n  {path: 'login', loadChildren: () => import('./login/login.module'). then(m => m.LoginModule)},\n  {path: 'pages', loadChildren: () => import('./pages/pages.module'). then(m => m.PagesModule)}\n\n\n\n];\n\n/*const routes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'home', loadChildren: () => import('./pages1/home/home.module'). then(m => m.HomeModule)},\n  {path: 'admin', loadChildren: () => import('./pages1/admin/admin.module'). then(m => m.AdminModule)},\n  {path: 'list', loadChildren: () => import('./pages1/list/list.module'). then(m => m.ListModule)}\n\n\n\n];*/\n@NgModule({\n  imports: [RouterModule.forRoot(routes)], // forChild(ruta ni√±o), for root(raiz)\n  exports: [RouterModule]\n})\nexport class AppRouting { }\n","import {Directive, ElementRef, TemplateRef, ViewContainerRef, Input, OnInit} from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[NgElse]'\n})\nexport class NgElseDirective implements OnInit{\n\n  @Input() sentence: boolean;\n\n  constructor(private templateRef: TemplateRef<any>,\n              private viewContainer: ViewContainerRef) {\n\n  }\n\n  // tslint:disable-next-line:typedef\n  ngOnInit() {\n    if (this.sentence){\n      this.viewContainer.clear();\n    }else{\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}